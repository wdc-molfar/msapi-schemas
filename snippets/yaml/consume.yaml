queue:
    name:                           # optional name of queue 
    
    exchange: 
        name:                       # required name of exchange
                                    
        mode: fanout                # required type of exchange. Available values  "fanout" or "topic" or "direct" 
        
        options:  # !!! options for assertExchange method call
            durable: true           # (boolean): if true, the exchange will survive broker restarts. Defaults to true.
            autoDelete: false       # (boolean): if true, the exchange will be destroyed once the number of bindings for which it is the source drop to zero. Defaults to false.

    options:  # !!! options for assertQueue method call
        noAck: false                
        exclusive: false            # if true, scopes the queue to the connection (defaults to false)
        durable: true               # if true, the queue will survive broker restarts, modulo the effects of exclusive and autoDelete; this defaults to true if not supplied, unlike the others
        autoDelete: false           # if true, the queue will be deleted when the number of consumers drops to zero (defaults to false)
        prefetch: 1

message:
    options:  # !!! options for consume method call
        noAck: false                # (boolean): if true, the broker won’t expect an acknowledgement of messages delivered to this consumer; i.e., it will dequeue messages as soon as they’ve been sent down the wire. Defaults to false (i.e., you will be expected to acknowledge messages).
        exclusive: false            # (boolean): if true, the broker won’t let anyone else consume from this queue; if there already is a consumer, there goes your channel (so usually only useful if you’ve made a ‘private’ queue by letting the server choose its name).
